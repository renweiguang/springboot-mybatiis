<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rwg.mapper.UserMapper">

    <select id="selectByUserAndPassword" resultType="com.rwg.entity.User">
        select *
        from user where name = #{name} and pwd = #{pwd}
    </select>

    <select id="selectRecByPwd" resultType="com.rwg.entity.User">
        select *
        from user where pwd = #{pwd}
    </select>

    <select id="queryUserList" resultType="com.rwg.entity.User">
        select *
        from user
    </select>

    <select id="queryUserById" resultType="com.rwg.entity.User">
        select *
        from user
        where id = #{id}
    </select>

    <insert id="addUser" parameterType="com.rwg.entity.User">
        insert into user (id, name, pwd)
        values (#{id}, #{name}, #{pwd});
    </insert>

    <update id="updateUser" parameterType="com.rwg.entity.User">
        update user
        set name=#{name},
            pwd=#{pwd}
        where id = #{id};
    </update>

    <delete id="deleteUser" parameterType="int">
        delete
        from user
        where id = #{id};
    </delete>

    <select id="queryListDemo" resultType="com.rwg.entity.User">
        select * from user where id in
        <foreach collection="list" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="testMap" parameterType="Map" resultType="com.rwg.entity.User">
        select * from user where id in
        <foreach collection="id" item="ids" index="index"
                 open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </select>

    <select id="testArray" resultType="com.rwg.entity.User">
        select * from user where id in
        <foreach collection="array" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="testLike" resultType="com.rwg.entity.User">
        select *
        from user
        where pwd like CONCAT('%', "R110", '%')
          and pwd not like CONCAT('%', "R110108", '%')
    </select>

    <insert id="insertReturnPrimaryKey" useGeneratedKeys="true" keyProperty="Id"
            parameterType="com.rwg.entity.User">
        INSERT INTO user(name, pwd)
        values (#{name}, #{pwd})
    </insert>

</mapper>